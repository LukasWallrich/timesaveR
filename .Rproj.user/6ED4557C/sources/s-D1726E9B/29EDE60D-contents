---
title: "survey-functions"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{survey-functions}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE, eval = FALSE}
#Only to be run locally to link to vignette from GitHub README
rmarkdown::render("vignettes/survey-functions.Rmd", output_file="doc/survey-functions.html")
```


```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

# Using survey weights

Large-scale social surveys often do not aim to recruit random samples, but rather oversample small groups that are of interest for sub-group analyses (e.g., ethnic minorities). In addition, they never quite succeed in recruiting representative samples. To ensure that the results of statistical models approximate population parameters, survey weights need to be used to give each participant a specific weight in analyses. You can find out more in this [brief YouTube video](https://youtu.be/brxx81U6N1o) or explore the more [extensive guide to weights in the European Social Survey](https://www.europeansocialsurvey.org/methodology/ess_methodology/data_processing_archiving/weighting.html) as an example. 

# Survey weights in timesaveR

Many functions in the `timesaveR` package have alternatives that accept survey objects instead of dataframes. These functions are designated by the `svy_` prefix. To use them, you will first need to use the `survey` package to create a survey object based on the dataframe.

```{r setup}
library(timesaveR)
library(survey)

#Create weights (consists of two variables in ESS)
ess_health$svy_weight <- ess_health$pspwght * ess_health$pweight

ess_survey <- svydesign(~1, data = ess_health, 
                        weights = ess_health$svy_weight)
```
