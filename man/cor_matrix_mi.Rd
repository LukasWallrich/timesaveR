% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cor_tables.R
\name{cor_matrix_mi}
\alias{cor_matrix_mi}
\title{Create a (weighted) correlation matrix from multiply imputed data}
\source{
Takes some code from the \code{miceadds::micombine.cor} function,
but adapted to use weights and return in the format accepted by
\code{\link{report_cor_table}}
}
\usage{
cor_matrix_mi(data, weights = NULL, var_names = NULL)
}
\arguments{
\item{data}{A dataframe with multiple imputations distinguished by a \code{.imp} variable.
Typically the output from `mice::complete(mids, "long").}

\item{weights}{A variable within \code{data} that gives the survey weights}

\item{var_names}{A named character vector with new variable names or a tibble as provided by \code{\link[=get_rename_tribbles]{get_rename_tribbles()}}
for variables. If NULL, then the variables are not renamed. If names are provided, only the variables included here are retained.
This is most helpful when the results are passed to some print function, such as \code{\link[=report_cor_table]{report_cor_table()}}
To facilitate post-processing, correlations with \emph{original} variable
names are returned in the \code{tests} element.}
}
\value{
A correlation matrix list similar to the format provided by
\code{jtools::svycor()} with the addition of a \code{desc}-element with means
and standard deviations of the variables.
}
\description{
This function takes an imputationList with a vector of weights and returns
a correlation matrix for all numeric variables as well as a list of
descriptives that pools the results across all imputations.
}
\details{
Variables starting with . are dropped, as these are likely to be .imp and .id
from mice. If you want correlations for such variables, rename them.
}
\examples{

library(dplyr)
library(mice)

# Create Dataset with missing data
ess_health <- ess_health \%>\% sample_n(500) \%>\% 
    select(etfruit, eatveg , dosprt, health, wt = pspwght)
add_missing <- function(x) {x[!rbinom(length(x), 1, .9)] <- NA; x}
ess_health <- ess_health \%>\% mutate(across(c(everything(), -wt), add_missing))

# Impute data
ess_health_mi <- mice(ess_health, printFlag = FALSE) 
ess_health_mi <- complete(ess_health_mi, "long")

cor_matrix <- cor_matrix_mi(ess_health_mi, weights = wt)
}
