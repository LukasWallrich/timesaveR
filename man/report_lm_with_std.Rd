% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_tables.R
\name{report_lm_with_std}
\alias{report_lm_with_std}
\title{Create a summary table comparing standardized and non-standardized linear models}
\usage{
report_lm_with_std(
  mod,
  mod_std,
  conf_level = 0.95,
  coef_renames = NULL,
  fmt = "\%.2f",
  statistic_vertical = FALSE,
  filename = NULL,
  model_names = NULL,
  show_nimp = FALSE,
  R2_change = FALSE,
  notes = list(NULL),
  apa_style = TRUE,
  stars = std_stars_pad,
  ...
)
}
\arguments{
\item{mod}{A lm-model/mira object of lm models, with variables not standardized (or a list of such models)}

\item{mod_std}{A lm-model/mira object of lm models, with standardized variables. Can be
created with \code{\link[=lm_std]{lm_std()}} (or a list of such models)}

\item{conf_level}{Confidence level to use for confidence intervals, defaults to .95}

\item{coef_renames}{A named character vector with new names for the coefficients or a tibble as provided by \code{\link[=get_coef_rename_tribble]{get_coef_rename_tribble()}}
for variables. If NULL, then the coefficients are not renamed.}

\item{fmt}{determines how to format numeric values
\itemize{
\item integer: the number of digits to keep after the period \code{format(round(x, fmt), nsmall=fmt)}
\item character: passed to the \code{sprintf} function (e.g., '\%.3f' keeps 3 digits with trailing zero). See \code{?sprintf}
\item function: returns a formatted character string.
\item NULL: does not format numbers, which allows users to include function in the "glue" strings in the \code{estimate} and \code{statistic} arguments.
\item A named list to format distinct elements of the table differently. Names correspond to column names produced by \code{get_estimates(model)} or \code{get_gof(model)}. Values are integers, characters, or functions, as described above. The \code{fmt} element is used as default for unspecified elements Ex: \code{fmt=list("estimate"=2, "std.error"=1, "r.squared"=4, "fmt"=3)}
\item LaTeX output: To ensure proper typography, all numeric entries are enclosed in the \verb{\\num{}} command, which requires the \code{siunitx} package to be loaded in the LaTeX preamble. This behavior can be altered with global options. See the 'Details' section.
}}

\item{statistic_vertical}{Should standard errors and CIs be shown below coefficients? Defaults to horizontal layout}

\item{filename}{the file name to create a HTML file on disk.}

\item{model_names}{If several pairs of models are to be plotted side by side, indicate the label for each \emph{pair} here}

\item{show_nimp}{Logical - DEFUNCT. If mira objects are passed, this determines whether the number of imputations will be reported as a model statistic}

\item{R2_change}{Logical. Report R2 change and F-test to compare models.}

\item{notes}{List of notes to append to bottom of table. An explanation of significance stars is automatically added. If the std models were run with a helper function in this package, a note regarding the standardization is also automatically added.}

\item{apa_style}{Logical, should APA-style formatting be applied}

\item{stars}{Named vector of significance stars and their thresholds, check \code{timesaveR:::std_stars_pad} for default.}

\item{...}{
  Arguments passed on to \code{\link[modelsummary:modelsummary]{modelsummary::modelsummary}}
  \describe{
    \item{\code{coef_map}}{character vector. Subset, rename, and reorder coefficients.
Coefficients omitted from this vector are omitted from the table. The order
of the vector determines the order of the table. \code{coef_map} can be a named
or an unnamed character vector. If \code{coef_map} is a named vector, its values
define the labels that must appear in the table, and its names identify the
original term names stored in the model object: \code{c("hp:mpg"="HPxM/G")}. See
Examples section below.}
    \item{\code{coef_omit}}{string regular expression (perl-compatible) used to determine which coefficients to omit from the table. A "negative lookahead" can be used to specify which coefficients to \emph{keep} in the table. Examples:
\itemize{
\item \code{"ei"}: omit coefficients matching the "ei" substring.
\item \code{"^Volume$"}: omit the "Volume" coefficient.
\item \code{"ei|rc"}: omit coefficients matching either the "ei" or the "rc" substrings.
\item \code{"^(?!Vol)"}: keep coefficients starting with "Vol" (inverse match using a negative lookahead).
\item \code{"^(?!.*ei)"}: keep coefficients matching the "ei" substring.
\item \code{"^(?!.*ei|.*pt)"}: keep coefficients matching either the "ei" or the "pt" substrings.
\item See the Examples section below for complete code.
}}
    \item{\code{coef_rename}}{named character vector or function
\itemize{
\item Named character vector: Values refer to the variable names that will appear in the table. Names refer to the original term names stored in the model object. Ex: c("hp:mpg"="hp X mpg")
\item Function: Accepts a character vector of the model's term names and returns a named vector like the one described above. The \code{modelsummary} package supplies a \code{coef_rename()} function which can do common cleaning tasks: \code{modelsummary(model, coef_rename = coef_rename)}
}}
  }}
}
\value{
A list with \code{gt_tab} (the gt-table object including the parts of the table
that can be created with gt. This can be post-processed and formatted with functions in
the gt-package, but does not include the lower part with model statistics, e.g., R^2.) and
\code{html_code} (the code that creates the full table, and is used to render it in
the Viewer).
}
\description{
This function creates a summary table for lm models (including mice::mira objects
containing lm-models) that shows a standardized and non-standardized version of the model
side-by-side. Several pairs of such models can be compared side-by-side.
}
\examples{

# Standard lm model
mod1 <- lm(mpg ~ hp + wt, mtcars)

# Model with standardized coefficients

mod2 <- lm_std(mpg ~ hp + wt, mtcars)

report_lm_with_std(mod1, mod2)
}
