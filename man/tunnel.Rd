% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr_wrappers.R
\name{tunnel}
\alias{tunnel}
\title{Tunnel a dataframe through a function for side effects}
\source{
Inspired by the magrittr \code{\%T>\%} operator that promises similar
  functionality but often didn't quite fit my needs
}
\usage{
tunnel(df, fun, ..., note = NULL, return = TRUE)
}
\arguments{
\item{df}{A dataframe}

\item{fun}{A function that is applied to the dataframe and the
output of which is printed. If the argument is not passed, df is
merely printed and not returned, which only makes sense in combination
with the `note` argument}

\item{...}{Arguments passed on to \code{fun}}

\item{note}{A string that is printed above the \code{fun}-output}

\item{return}{Logical - should df be returned?}
}
\value{
The original dataframe, unless \code{return} is set to FALSE. In that
  case, NULL is returned invisibly, so that the function can be used to just
  add a note above the output of another function.
}
\description{
Within a dplyr-pipe, you might want to print a summary statistic or run some
other function before continuing to process or save the original data. This
function does that by taking a dataframe and function as arguments, printing
the result of the function and returning the dataframe for further processing.
}
\examples{
library(magrittr)
x <- 1:5 \%>\%
  tunnel(mean, note = "Mean") \%>\%
  tunnel(sd, note = "SD")
x
}
